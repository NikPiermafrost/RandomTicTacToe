@page "/"
@using Services;
@inject IMainHelpersService MainHelperService;
@using RndTacToe.Shared;
@inject NavigationManager NavigationManager;
@inject IJSRuntime JSRuntime;

<div class="container main-index-container">
    <div class="row">
        <div class="col-lg-2"></div>
        <div class="col-lg-8">
            <EditForm OnValidSubmit="@OnSubmit" EditContext="@editContext">
                <div class="d-flex justify-content-between mb-3">
                    <button type="button" class="btn btn-light" style="background-color: #f3f5ef" @onclick="@(() =>IsNewGame())">New Game</button>
                    <button type="button" class="btn btn-light" style="background-color: #f3f5ef" @onclick="@(() =>IsJoin())">Join Game</button>
                </div>
                <DataAnnotationsValidator />
                <div class="form-group">
                    <h4>Username</h4>
                    <InputText class="form-control" id="username" @bind-Value="@gameForm.Username" />
                    <ValidationMessage For="@(() => gameForm.Username)" />
                </div>
                @if(!isJoin)
                {
                    <h4>New Game</h4>
                    <div class="d-flex justify-content-between">
                        @if (!string.IsNullOrEmpty(newGameGuid))
                        {
                            <span class="mr-3" style="font-size: 1.5rem">Room Code: @newGameGuid</span>
                            <button type="button" class="btn btn-light btn-sm" style="background-color: #f3f5ef" @onclick="@(() => CopyToClipBoard())">Copy</button>
                        }
                    </div>
                }
                else
                {
                    
                    <h4>Insert the game code to join!</h4>
                    <div class="form-group">
                        <InputText class="form-control w-100" id="username" @bind-Value="@gameForm.GameCode" />
                    </div>
                }
                <hr />
                <div class="d-flex justify-content-end">
                    <button disabled="@formInvalid" type="submit" class="btn btn-light" style="background-color: #f3f5ef">
                        @if(isJoin)
                        {
                            <span>Join Game</span>
                        }
                        else
                        {
                            <span>Start Game</span>
                        }
                    </button>
                </div>
            </EditForm>
        </div>
        <div class="col-lg-2"></div>
    </div>
</div>

@code {
    private LoginForm gameForm = new LoginForm();
    private string newGameGuid;
    private bool formInvalid = false;
    private bool isJoin = false;
    private EditContext editContext;

    protected override void OnInitialized()
    {
        newGameGuid = Guid.NewGuid().ToString().ToLower().Trim('-').Substring(0, 8);
        editContext = new EditContext(gameForm);
        editContext.OnFieldChanged += HandleFieldChanged;
    }

    private void HandleFieldChanged(object sender, FieldChangedEventArgs e)
    {
        formInvalid = !editContext.Validate();
        StateHasChanged();
    }

    void IsNewGame() 
    {
        isJoin = false;
    }

    void IsJoin()
    {
        isJoin = true;
    }

    void CopyToClipBoard()
    {
        JSRuntime.InvokeVoidAsync("copyToClipBoard", newGameGuid);
    }

    void OnSubmit()
    {
        MainHelperService.SetCurrentUserName(gameForm.Username);
        MainHelperService.SetRandomnessValue(gameForm.Username);
        if (!string.IsNullOrEmpty(gameForm.GameCode))
        {
            MainHelperService.SetHasStarted(false);
            NavigationManager.NavigateTo($"/{gameForm.GameCode}");
        }
        else
        {
            MainHelperService.SetHasStarted(true);
            NavigationManager.NavigateTo($"/{newGameGuid}");
        }
    }
}