@page "/{GameId}"
@using Services
@using RndTacToe.Client.Components
@using RndTacToe.Shared
@inject IMainHelpersService MainHelpersService
@inject NavigationManager NavigationManager

<div class="container">
    <div class="row">
        <div class="col-lg-2">
        </div>
        <div class="col-lg-8"></div>
        <div class="col-lg-2">
        </div>
    </div>
    <div class="d-flex justify-content-between">
        @if (!string.IsNullOrEmpty(currentPlayerName))
        {
            <UserColumn Username="@currentPlayerName" Randomness="@currentRandomness"></UserColumn>
        }
        <h4>Vs.</h4>
        @if (!string.IsNullOrEmpty(enemyPlayerName))
        {
            <UserColumn Username="@enemyPlayerName" Randomness="@enemyPlayerRandomness"></UserColumn>
        }
        else
        {
            <h4>Waiting for player to connect...</h4>
        }
    </div>
    <div class="d-flex justify-content-center mt-3">
        <div class="grid-container">
            @foreach(var item in GameGrid)
            {
                <div class="grid-item" @onclick="@(() => makeTheMove(item.CellPosition))">
                    @item.StoredChar
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string GameId { get; set; }

    private string currentPlayerName;
    private int currentRandomness = 0;
    private string enemyPlayerName;
    private int enemyPlayerRandomness = 0;
    private string yourSimbol = "X";

    private TicTacToeCell[] GameGrid = new TicTacToeCell[9];

    protected override void OnInitialized()
    {
        currentPlayerName = MainHelpersService.GetCurrentPlayerName();
        currentRandomness = MainHelpersService.GetCurrentRandomness();
        if(string.IsNullOrEmpty(currentPlayerName)) 
        {
            NavigationManager.NavigateTo("/");
        }
        InitializeEmptyGrid();
    }

    void InitializeEmptyGrid()
    {
        for(int i = 0; i < 9; i++)
        {
            GameGrid[i] = new TicTacToeCell
            {
                StoredChar = "",
                CellPosition = i
            };
        }
        StateHasChanged();
    }

    void makeTheMove(int cellPosition) 
    {
        GameGrid.FirstOrDefault(x => x.CellPosition == cellPosition).StoredChar = yourSimbol;
        StateHasChanged();
    }
}
